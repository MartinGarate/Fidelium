@page "/signin"
@inject SweetAlertService sweetAlert
@inject FirebaseAuthService firebaseAuthService
@inject NavigationManager navigationManager

<div class="auth-container">
    <div class="auth-card">
        <div class="card-header">
            <h2 class="text-gradient mb-0">Crear cuenta</h2>
        </div>
        <div class="card-body">
            <form class="auth-form" @onsubmit:preventDefault @onsubmit="Register">
                <div class="form-group mb-4">
                    <label for="Nombre">Nombre completo</label>
                    <div class="input-group">
                        <i class="fas fa-user input-icon"></i>
                        <input type="text" id="Nombre" class="form-control" @bind="name" placeholder="Tu nombre completo" />
                    </div>
                </div>

                <div class="form-group mb-4">
                    <label for="email">Correo electrónico</label>
                    <div class="input-group">
                        <i class="fas fa-envelope input-icon"></i>
                        <input type="email" id="email" class="form-control" @bind="email" placeholder="tu@email.com" />
                    </div>
                </div>

                <div class="form-group mb-4">
                    <label for="password">Contraseña</label>
                    <div class="input-group">
                        <i class="fas fa-lock input-icon"></i>
                        <input type="password" id="password" class="form-control" @bind="password" placeholder="••••••••" />
                    </div>
                </div>

                <div class="form-group mb-4">
                    <label for="passwordverify">Confirmar contraseña</label>
                    <div class="input-group">
                        <i class="fas fa-lock input-icon"></i>
                        <input type="password" id="passwordverify" class="form-control" @bind="passwordverify" placeholder="••••••••" />
                    </div>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-user-plus me-2"></i>
                        Crear cuenta
                    </button>
                </div>

                <div class="text-center mt-4">
                    <p class="text-muted">
                        ¿Ya tienes una cuenta?
                        <a href="/login" class="text-primary">Iniciar sesión</a>
                    </p>
                </div>
            </form>
        </div>
        <div class="card-footer">
            <div class="text-center">
                <span class="text-gradient">ágora</span>
            </div>
        </div>
    </div>
</div>

@code {
    string name = string.Empty;
    string email = string.Empty;
    string password = string.Empty;
    string passwordverify = string.Empty;

    private async Task Register()
    {
        if (string.IsNullOrWhiteSpace(name) || string.IsNullOrWhiteSpace(email) || string.IsNullOrWhiteSpace(password) || string.IsNullOrWhiteSpace(passwordverify))
        {
            await sweetAlert.FireAsync("Error", "Por favor, complete todos los campos.", SweetAlertIcon.Error);
            return;
        }
        if (password != passwordverify)
        {
            await sweetAlert.FireAsync("Error", "Las contraseñas no coinciden.", SweetAlertIcon.Error);
            return;
        }
        var result = await firebaseAuthService.createUserWithEmailAndPassword(email, password, name);
        if (result != null)
        {
            await sweetAlert.FireAsync("Éxito", "Usuario registrado correctamente.", SweetAlertIcon.Success);
            // Limpiar los campos después del registro exitoso
            name = string.Empty;
            email = string.Empty;
            password = string.Empty;
            passwordverify = string.Empty;
            navigationManager.NavigateTo("/login");
        }
        else
        {

            await sweetAlert.FireAsync("Error", "Error al registrar el usuario", SweetAlertIcon.Error);
        }
    }
}
