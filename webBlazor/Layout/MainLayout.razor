@inherits LayoutComponentBase
@inject AuthenticationStateService authStateService
@inject NavigationManager navigationManager

<PageTitle>Fidelium</PageTitle>

@if (!authStateService.IsAuthenticated && !IsLoginPage)
{
    <div class="loading-container">
        <div class="loading-spinner"></div>
        @{
            navigationManager.NavigateTo("/login", forceLoad: false);
        }
    </div>
}
else
{
    <div class="page">
        <NavMenu />
        <main class="@GetMainContentClass()">
            @Body
        </main>
    </div>
}

@code {
    private bool IsLoginPage =>
        navigationManager.Uri.EndsWith("/login", StringComparison.OrdinalIgnoreCase) ||
        navigationManager.Uri.EndsWith("/signin", StringComparison.OrdinalIgnoreCase);

    private bool IsHomePage =>
        navigationManager.Uri.EndsWith("/", StringComparison.OrdinalIgnoreCase) ||
        navigationManager.Uri.ToLower().EndsWith("/home", StringComparison.OrdinalIgnoreCase);

    private string GetMainContentClass()
    {
        return IsHomePage ? "main-content-home" : "main-content";
    }

    protected override void OnInitialized()
    {
        // Suscribirse a cambios en el estado de autenticación
        authStateService.OnAuthenticationStateChanged += StateHasChanged;
    }

    public void Dispose()
    {
        // Limpieza de la suscripción
        authStateService.OnAuthenticationStateChanged -= StateHasChanged;
    }
}